<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[chapter31 &raquo;]]></title>
  <link href="http://chapter31.com/atom.xml" rel="self"/>
  <link href="http://chapter31.com/"/>
  <updated>2013-06-08T23:37:15+10:00</updated>
  <id>http://chapter31.com/</id>
  <author>
    <name><![CDATA[Michael Sharman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Error writing git commit messages with vi]]></title>
    <link href="http://chapter31.com/2013/06/08/error-writing-git-commit-messages-with-vi/"/>
    <updated>2013-06-08T23:24:00+10:00</updated>
    <id>http://chapter31.com/2013/06/08/error-writing-git-commit-messages-with-vi</id>
    <content type="html"><![CDATA[<p>I typically write my git commit messages in the terminal, but today I wanted to write a multi-line comment so I left out the <em>-m</em> argument to <em>git commit</em> so it would open up my default editor, which is <em>vi</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git commit
</span></code></pre></td></tr></table></div></figure>


<p>I wrote my comment, saved and exit but got an error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git commit
</span><span class='line'>error: There was a problem with the editor <span class="s1">&#39;vi&#39;</span>.
</span><span class='line'>Please supply the message using either -m or -F option.
</span></code></pre></td></tr></table></div></figure>


<p>A quick google and I <a href="http://tooky.co.uk/2010/04/08/there-was-a-problem-with-the-editor-vi-git-on-mac-os-x.html">found the solution</a>, I thought I&#8217;d repost it here for myself as well as others.</p>

<p>There are a couple of solutions offered in that article, for me I just set the full path to <em>vi</em> with a <em>-f</em> flag in my .gitconfig:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>core<span class="o">]</span>
</span><span class='line'>  <span class="nv">editor</span> <span class="o">=</span> /usr/bin/vi -f
</span></code></pre></td></tr></table></div></figure>


<p>As an FYI&#8230;if you want to see the values in git config, you can run this command in your project and it will list your global and project configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config -l
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Composer error - cannot redeclare class]]></title>
    <link href="http://chapter31.com/2013/06/03/php-composer-error-cannot-redeclare-class/"/>
    <updated>2013-06-03T09:16:00+10:00</updated>
    <id>http://chapter31.com/2013/06/03/php-composer-error-cannot-redeclare-class</id>
    <content type="html"><![CDATA[<p>I rebuilt PHP last night to include APC and all of a sudden composer stopped working in my project. Whenever I ran a simple update, install or dump-autoload I&#8217;d get:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>composer update
</span><span class='line'>PHP Fatal error:  include<span class="o">()</span>: Cannot redeclare class symfony<span class="se">\c</span>omponent<span class="se">\p</span>rocess<span class="se">\p</span>rocess in phar:///usr/local/bin/composer/vendor/composer/ClassLoader.php on line 183
</span><span class='line'>
</span><span class='line'>Fatal error: include<span class="o">()</span>: Cannot redeclare class symfony<span class="se">\c</span>omponent<span class="se">\p</span>rocess<span class="se">\p</span>rocess in phar:///usr/local/bin/composer/vendor/composer/ClassLoader.php on line 183
</span></code></pre></td></tr></table></div></figure>


<p>A quick google told me <a href="https://github.com/composer/composer/issues/1432">others</a> also had the <a href="https://github.com/composer/composer/issues/264">same</a> issue.</p>

<p>It seems that there&#8217;s a bug between composer.phar and APC. From one of the composer issues:</p>

<pre><code>Quite weird, but then again the php docs seem to acknowledge that APC should not really be
enabled on the CLI. It seems to be a phar+apc bug, see https://bugs.php.net/bug.php?id=59398
https://bugs.php.net/bug.php?id=59829 https://bugs.php.net/bug.php?id=59907 as well.
</code></pre>

<p>There are a couple of things you can do to fix this, but they all involve turning off APC for php-cli. First, run <em>composer diag</em> to see whether any more information can be gleaned:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>composer diag
</span><span class='line'>Checking platform settings: FAIL
</span><span class='line'>
</span><span class='line'>The apc.enable_cli setting is incorrect.
</span><span class='line'>Add the following to the end of your <span class="sb">`</span>php.ini<span class="sb">`</span>:
</span><span class='line'>    apc.enable_cli <span class="o">=</span> Off
</span><span class='line'>
</span><span class='line'>The php.ini used by your <span class="nb">command</span>-line PHP is: /opt/php-5.4.15/lib/php.ini
</span><span class='line'>If you can not modify the ini file, you can also run <span class="sb">`</span>php -d <span class="nv">option</span><span class="o">=</span>value<span class="sb">`</span> to modify ini values on the fly. You can use -d multiple times.
</span></code></pre></td></tr></table></div></figure>


<p>If you get that message, you know you have the same problem as I did :) You can also check the <a href="http://getcomposer.org/doc/articles/troubleshooting.md">troubleshooting</a> page on getcomposer.org</p>

<p>You can try running the <em>self-update</em> (for me I don&#8217;t reference the .phar file because I use the unix install convention).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php /usr/local/bin/composer self-update
</span></code></pre></td></tr></table></div></figure>


<p>Those are really just everyday things to try if you have composer issues, to really fix this you need to disable APC for php-cli. You should set this option to <em>0</em> in your php.ini</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apc.enable_cli<span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>If you don&#8217;t have access to php.ini, you can disable APC on the CLI per command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php -d apc.enable_cli<span class="o">=</span>0 /usr/local/bin/composer install
</span></code></pre></td></tr></table></div></figure>


<p>Note: if you have composer.phar in your project you could just do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php -d apc.enable_cli<span class="o">=</span>0 composer.phar install
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing APC in PHP 5.4.x on Mac OSX]]></title>
    <link href="http://chapter31.com/2013/06/02/installing-apc-in-php-5-dot-4-x-on-mac-osx/"/>
    <updated>2013-06-02T16:33:00+10:00</updated>
    <id>http://chapter31.com/2013/06/02/installing-apc-in-php-5-dot-4-x-on-mac-osx</id>
    <content type="html"><![CDATA[<p>I recently <a href="http://chapter31.com/2013/05/06/installing-php-5-dot-4-plus-from-source-on-mac-mountain-lion/">installed PHP 5.4 from source</a> but needed to add <abbr title="Alternative PHP Cache">APC</abbr>.</p>

<p>Most people can install this using <abbr title="PHP Extension Community Library">PECL</abbr>, but I got an error doing this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pecl install apc
</span><span class='line'>
</span><span class='line'>Warning: lstat<span class="o">()</span>: Lstat failed <span class="k">for</span> /private/tmp/pear/cache/497e483d585c1e3f341260e73a8c6e85rest.cacheid in PEAR/REST.php on line 276
</span><span class='line'>
</span><span class='line'>Warning: lstat<span class="o">()</span>: Lstat failed <span class="k">for</span> /private/tmp/pear/cache/497e483d585c1e3f341260e73a8c6e85rest.cacheid in /opt/php-5.4.15/lib/php/PEAR/REST.php on line 276
</span><span class='line'>No releases available <span class="k">for </span>package <span class="s2">&quot;pecl.php.net/apc&quot;</span>
</span><span class='line'>install failed
</span></code></pre></td></tr></table></div></figure>


<p>So instead I downloaded the APC source <a href="http://pecl.php.net/package/APC">from the PECL website</a> and ran the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>APC-3.1.13/
</span><span class='line'>phpize
</span><span class='line'>./configure --with-php-config<span class="o">=</span>/opt/php/bin/php-config --enable-apc
</span><span class='line'>make
</span><span class='line'><span class="nb">export </span><span class="nv">TEST_PHP_ARGS</span><span class="o">=</span><span class="s1">&#39;-n&#39;</span>
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>Note that my <em>php-config</em> setting is a little different because I installed my PHP into <em>/opt</em> instead of the default <em>/usr/bin</em></p>

<p>The output of <em>make install</em> is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo make install
</span><span class='line'>Installing shared extensions:     /opt/php-5.4.15/lib/php/extensions/no-debug-non-zts-20100525/
</span><span class='line'>Installing header files:          /opt/php-5.4.15/include/php/
</span></code></pre></td></tr></table></div></figure>


<p>Copy the <em>Installing shared extensions</em> path into your php.ini file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>apc<span class="o">]</span>
</span><span class='line'><span class="nv">extension</span><span class="o">=</span>/opt/php-5.4.15/lib/php/extensions/no-debug-non-zts-20100525/apc.so
</span><span class='line'>apc.enabled<span class="o">=</span>1
</span><span class='line'>apc.shm_size<span class="o">=</span>128M
</span><span class='line'>apc.ttl<span class="o">=</span>7200
</span><span class='line'>apc.user_ttl<span class="o">=</span>7200
</span><span class='line'>apc.enable_cli<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>You can double check the installation process by either reviewing phpinfo(); in a browser or using CLI:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php -i | grep apc
</span></code></pre></td></tr></table></div></figure>


<p>If you see something like the following (from php -i)&#8230;all good:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apc.cache_by_default <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.canonicalize <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.coredump_unmap <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.enable_cli <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.enabled <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.file_md5 <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.file_update_protection <span class="o">=</span>&gt; <span class="nv">2</span> <span class="o">=</span>&gt; 2
</span><span class='line'>apc.filters <span class="o">=</span>&gt; no <span class="nv">value</span> <span class="o">=</span>&gt; no value
</span><span class='line'>apc.gc_ttl <span class="o">=</span>&gt; <span class="nv">3600</span> <span class="o">=</span>&gt; 3600
</span><span class='line'>apc.include_once_override <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.lazy_classes <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.lazy_functions <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.max_file_size <span class="o">=</span>&gt; <span class="nv">1M</span> <span class="o">=</span>&gt; 1M
</span><span class='line'>apc.mmap_file_mask <span class="o">=</span>&gt; no <span class="nv">value</span> <span class="o">=</span>&gt; no value
</span><span class='line'>apc.num_files_hint <span class="o">=</span>&gt; <span class="nv">1000</span> <span class="o">=</span>&gt; 1000
</span><span class='line'>apc.preload_path <span class="o">=</span>&gt; no <span class="nv">value</span> <span class="o">=</span>&gt; no value
</span><span class='line'>apc.report_autofilter <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.rfc1867 <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.rfc1867_freq <span class="o">=</span>&gt; <span class="nv">0</span> <span class="o">=</span>&gt; 0
</span><span class='line'>apc.rfc1867_name <span class="o">=</span>&gt; <span class="nv">APC_UPLOAD_PROGRESS</span> <span class="o">=</span>&gt; APC_UPLOAD_PROGRESS
</span><span class='line'>apc.rfc1867_prefix <span class="o">=</span>&gt; <span class="nv">upload_</span> <span class="o">=</span>&gt; upload_
</span><span class='line'>apc.rfc1867_ttl <span class="o">=</span>&gt; <span class="nv">3600</span> <span class="o">=</span>&gt; 3600
</span><span class='line'>apc.serializer <span class="o">=</span>&gt; <span class="nv">default</span> <span class="o">=</span>&gt; default
</span><span class='line'>apc.shm_segments <span class="o">=</span>&gt; <span class="nv">1</span> <span class="o">=</span>&gt; 1
</span><span class='line'>apc.shm_size <span class="o">=</span>&gt; <span class="nv">128M</span> <span class="o">=</span>&gt; 128M
</span><span class='line'>apc.shm_strings_buffer <span class="o">=</span>&gt; <span class="nv">4M</span> <span class="o">=</span>&gt; 4M
</span><span class='line'>apc.slam_defense <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.stat <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.stat_ctime <span class="o">=</span>&gt; <span class="nv">Off</span> <span class="o">=</span>&gt; Off
</span><span class='line'>apc.ttl <span class="o">=</span>&gt; <span class="nv">7200</span> <span class="o">=</span>&gt; 7200
</span><span class='line'>apc.use_request_time <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span><span class='line'>apc.user_entries_hint <span class="o">=</span>&gt; <span class="nv">4096</span> <span class="o">=</span>&gt; 4096
</span><span class='line'>apc.user_ttl <span class="o">=</span>&gt; <span class="nv">7200</span> <span class="o">=</span>&gt; 7200
</span><span class='line'>apc.write_lock <span class="o">=</span>&gt; <span class="nv">On</span> <span class="o">=</span>&gt; On
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[base16 - colour scheme for hackers]]></title>
    <link href="http://chapter31.com/2013/06/01/base16-colour-scheme-for-hackers/"/>
    <updated>2013-06-01T17:40:00+10:00</updated>
    <id>http://chapter31.com/2013/06/01/base16-colour-scheme-for-hackers</id>
    <content type="html"><![CDATA[<p>I came across a great set of colour schemes called <a href="http://chriskempson.github.io/base16/">base16</a>. From the website:</p>

<pre><code>Base16 provides carefully chosen syntax highlighting and a default set of 
sixteen colors suitable for a wide range of applications.

Base16 is both a color scheme and a template.
</code></pre>

<p>There are repos for the following tools:</p>

<ul>
<li>Base 16 Builder</li>
<li>Vim</li>
<li>Shell</li>
<li>iTerm2</li>
<li>TextMate</li>
<li>OSX Color Palette</li>
<li>Xresources</li>
<li>Mou</li>
<li>XFCE4 Terminal</li>
<li>Gimp Palette</li>
<li>Gnome Terminal</li>
<li>Emacs</li>
<li>Geany</li>
</ul>


<p> There&#8217;s even <a href="https://github.com/chriskempson/base16-builder">a builder</a> so you can roll your own theme!</p>

<p> I&#8217;m currently using Monaki Dark 256 for iTerm2. The best bet is to git clone the <a href="https://github.com/chriskempson/base16-iterm2">iTerms 2 colour schemes</a> to somewhere on your machine that is persistent. Perhaps <em>~/Documents/iterm2_schemes/base16</em>.</p>

<p> Then you can experiment with the colours you like by going to preferences->profiles->colors then import your schemes using the <em>load presets</em> dropdown (pointing to wherever you cloned the base16 repo).</p>

<p> <img src="http://chapter31.com/images/monaki-dark.png" alt="Monaki Dark 256" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Xdebug on Mac Mountain Lion (10.8.3)]]></title>
    <link href="http://chapter31.com/2013/05/29/installing-xdebug-on-mac-mountain-lion-10-dot-8-3/"/>
    <updated>2013-05-29T06:31:00+10:00</updated>
    <id>http://chapter31.com/2013/05/29/installing-xdebug-on-mac-mountain-lion-10-dot-8-3</id>
    <content type="html"><![CDATA[<p>Even though I&#8217;m running Mountain Lion (10.8.3) which comes with Xdebug I couldn&#8217;t get the PHP (5.4.14) local web server to register that Xdebug was actually installed and enabled.</p>

<p>My php.ini had the already installed Xdebug extension enabled:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">zend_extension</span><span class="o">=</span><span class="s2">&quot;/usr/lib/php/extensions/no-debug-non-zts-20090626/xdebug.so&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>But whenever I inspected <code>phpinfo()</code> there wasn&#8217;t any mention of Xdebug.</p>

<p>Luckily the <a href="http://xdebug.org/wizard.php">website has a wizard</a> where you can paste the output of phpinfo(). From there you get detailed instructions on how to download, configure and make the latest version of Xdebug. It&#8217;s pretty simple.</p>

<p>Essentially the steps are as follows:</p>

<ol>
<li>Download <a href="http://xdebug.org/files/xdebug-2.2.3.tgz">xdebug-2.2.3.tgz</a></li>
<li>Unpack the downloaded file with <code>tar -xvzf xdebug-2.2.3.tgz</code></li>
<li>Run: <code>cd xdebug-2.2.3</code></li>
<li>Run: <code>phpize</code> (Any problems…<a href="http://xdebug.org/docs/faq#phpize">see the FAQ</a>)</li>
<li>Run: <code>./configure</code></li>
<li>Run: <code>make</code></li>
<li>Run: <code>sudo mkdir -p /usr/lib/php/extensions/no-debug-non-zts-20100525</code></li>
<li>Run: <code>sudo cp modules/xdebug.so /usr/lib/php/extensions/no-debug-non-zts-20100525</code></li>
<li>Update your /etc/php.ini and uncomment/add the line
<code>zend_extension = /usr/lib/php/extensions/no-debug-non-zts-20100525/xdebug.so</code></li>
<li>Restart the webserver</li>
</ol>


<p>Now if you check the output of phpinfo() you should see Xdebug.</p>

<p>To make sure your debug output is being styled properly, make sure you have <code>html_errors = On</code> in php.ini (it defaults to <em>Off</em>).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL thread_stack overrun error]]></title>
    <link href="http://chapter31.com/2013/05/22/mysql-thread-stack-overrun-error/"/>
    <updated>2013-05-22T16:28:00+10:00</updated>
    <id>http://chapter31.com/2013/05/22/mysql-thread-stack-overrun-error</id>
    <content type="html"><![CDATA[<p>We added a trigger to MySQL (v5.5.28) recently that was a simple UPDATE on table column, when a target table was UPDATEd. It ran fine (as expected) on our development environment but not when we pushed the changes to staging.</p>

<p>The error being thrown by MySQL was:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Thread stack overrun:  8304 bytes used of a 131072 byte stack, and 128000 bytes needed.  Use <span class="s1">&#39;mysqld --thread_stack=#&#39;</span> to specify a bigger stack.
</span></code></pre></td></tr></table></div></figure>


<p>Querying the database told me that the current <em>thread_stack</em> setting is 128K:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql&gt; show variables where <span class="sb">`</span>Variable_name<span class="sb">`</span> <span class="o">=</span> <span class="s1">&#39;thread_stack&#39;</span>;
</span><span class='line'>+---------------+--------+
</span><span class='line'>| Variable_name | Value  |
</span><span class='line'>+---------------+--------+
</span><span class='line'>| thread_stack  | 131072 |
</span><span class='line'>+---------------+--------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This was confirmed by looking at the <em>thread_stack</em> variable in /etc/mysql/my.cnf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">thread_stack</span> <span class="o">=</span> 128K
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_thread_stack">docs for MySQL 5.5</a> suggest that it should be 192K for 32-bit systems and 256K for 64-bit systems. We&#8217;re running a 64-bit platform, you can tell by running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>me@mydbserver ~<span class="o">]</span><span class="nv">$ </span>uname -m
</span><span class='line'>x86_64
</span></code></pre></td></tr></table></div></figure>


<p>If the response is <em>i686</em>, you have a 32-bit version of Linux and if the response is <em>x86_64</em> then you have a 64-bit version of Linux.</p>

<p>The fix is a simple case of increasing the value to 256K (if you&#8217;re on 64-bit) or 192K if you&#8217;re on 32-bit, as per the documentation. Don&#8217;t forget that the thread_stack is an allocation of memory per connection, so don&#8217;t set it too high or you might run into memory issues on your database server.</p>

<p>In case it wasn&#8217;t clear, you can make this change in your <em>my.cnf</em> file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 6 caching POST requests]]></title>
    <link href="http://chapter31.com/2013/05/09/ios-6-caching-post-requests/"/>
    <updated>2013-05-09T14:28:00+10:00</updated>
    <id>http://chapter31.com/2013/05/09/ios-6-caching-post-requests</id>
    <content type="html"><![CDATA[<p>Apparently I&#8217;ve been living under a rock, never having been bitten (that I know of) by the pretty massive bug Apple rolled out in iOS 6 (with Safari). The bug has been well documented around the interwebs, basically Safari caches HTTP POST requests. If you haven&#8217;t heard about this&#8230;stop and read that last bit again.</p>

<p>Now, replicating this bug is dependent on the payload of the POST not changing between requests, so in many circumstances you may be fine. However let&#8217;s talk about something like a simple login form.</p>

<ul>
<li>User enters credentials in web form and clicks &#8220;Login&#8221;</li>
<li>App/site POSTs data to the server for authentication</li>
<li>Server authenticates request</li>
<li>200 OK is returned, and a session is spawned on the server</li>
</ul>


<p>Pretty standard workflow. Now what happens if the session expires and the user is presented with the login form again?</p>

<ul>
<li>User enters credentials in web form and clicks &#8220;Login&#8221;</li>
<li>App/site POSTs data to the server for authentication</li>
<li>The request is cached because the users data (credentials) are the same as before</li>
</ul>


<p>So in this scenario the request never actually gets sent to the server.  Your app/site is now broken, the user cannot login. This sort of issue can of course have huge consequences for any number of websites/applications.</p>

<p>It&#8217;s worth noting that the <a href="http://www.faqs.org/rfcs/rfc2616.html">HTTP/1.1 RFC</a> states (thanks <a href="http://stackoverflow.com/a/626083/1448058">Diomidis Spinellis</a>):</p>

<blockquote><p>Responses to this method are not cacheable, unless the response includes appropriate Cache-Control or Expires header fields.</p></blockquote>

<p>and:</p>

<blockquote><p>Some HTTP methods MUST cause a cache to invalidate an entity. This is either the entity referred to by the Request-URI, or by the Location or Content-Location headers (if present). These methods are:</p>

<ul>
<li>PUT</li>
<li>DELETE</li>
<li>POST</li>
</ul>
</blockquote>

<h2>Solution</h2>

<p>People have listed fixes like jQuery&#8217;s <em>{cache: false}</em> in the ajax params, to adding a random token to your payload. These methods seem a intrusive to me though as you need to change every form on every page in every app. So we went for a different approach, a simple Apache rule in your conf:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;Limit POST&gt;
</span><span class='line'>  Header <span class="nb">set </span>Cache-Control no-cache
</span><span class='line'>&lt;/Limit&gt;
</span></code></pre></td></tr></table></div></figure>


<p>All that&#8217;s saying is, if the incoming request is using the HTTP POST method, set a <em>no-cache</em> header. Nice and simple. Note that <em>mod_headers</em> needs to be enabled in Apache for this to work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating from bitbucket to github]]></title>
    <link href="http://chapter31.com/2013/05/08/migrating-from-bitbucket-to-github/"/>
    <updated>2013-05-08T10:31:00+10:00</updated>
    <id>http://chapter31.com/2013/05/08/migrating-from-bitbucket-to-github</id>
    <content type="html"><![CDATA[<p>Migrating repositories between <a href="https://bitbucket.org/">bitbucket</a> and <a href="http://github.com">github</a> couldn&#8217;t be simpler thanks to the design nature of <acronym title="Distrubuted Version Control System">DVCS</acronym> like git because the entire history is already located on your machine within your projects <em>.git</em> folder. All you&#8217;re really doing is changing a <em>remote</em>.</p>

<p>Open a terminal and navigate to your project directory.</p>

<h2>TLDR;</h2>

<p>For those who just want the commands with no explanation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git remote rename origin bitbucket
</span><span class='line'>git remote add origin git@github.com:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git
</span><span class='line'>git push -u origin master
</span><span class='line'>git remote rm bitbucket
</span></code></pre></td></tr></table></div></figure>


<h2>Explanation of steps</h2>

<p>Check which remote(s) you have now:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote -v show
</span><span class='line'>origin    git@bitbucket.org:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>origin    git@bitbucket.org:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now rename your existing <em>origin</em> to <em>bitbucket</em> (or whatever you want to call it):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git remote rename origin bitbucket
</span></code></pre></td></tr></table></div></figure>


<p> Double check your change:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote -v show
</span><span class='line'>bitbucket git@bitbucket.org:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>bitbucket git@bitbucket.org:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now add github as your <em>origin</em> and push the repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git remote add origin git@github.com:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git
</span><span class='line'>git push -u origin master
</span></code></pre></td></tr></table></div></figure>


<p>Check what remotes you have:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote -v show
</span><span class='line'>bitbucket git@bitbucket.org:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>bitbucket git@bitbucket.org:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>push<span class="o">)</span>
</span><span class='line'>origin    git@github.com:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>origin    git@github.com:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Removed the old remote (<em>bitbucket</em>):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git remote rm bitbucket
</span></code></pre></td></tr></table></div></figure>


<p>Finally, check your remotes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote -v show
</span><span class='line'>origin    git@github.com:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>origin    git@github.com:<span class="o">[</span>username<span class="o">]</span>/<span class="o">[</span>repo_name<span class="o">]</span>.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that at the end of this, you still have your code on bitbucket, you&#8217;ve just pushed your repository to github and pointed your <em>origin</em> remote to there. To fully <em>clean up</em> you need to delete your repo from bitbucket.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing PHP 5.4+ from source on Mac OSX Mountain Lion]]></title>
    <link href="http://chapter31.com/2013/05/06/installing-php-5-dot-4-plus-from-source-on-mac-mountain-lion/"/>
    <updated>2013-05-06T09:32:00+10:00</updated>
    <id>http://chapter31.com/2013/05/06/installing-php-5-dot-4-plus-from-source-on-mac-mountain-lion</id>
    <content type="html"><![CDATA[<p>Download and extract the PHP source from <a href="http://php.net/downloads.php">php.net</a>, for me that was  5.4.14. Put it somewhere friendly, the desktop will do.</p>

<p>Open a terminal and install some dependancies via brew:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install libjpeg
</span><span class='line'>brew install pcre
</span><span class='line'>brew install libxml2
</span><span class='line'>brew install mcrypt
</span></code></pre></td></tr></table></div></figure>


<p>Download and install ICU from <a href="http://site.icu-project.org/download/48#ICU4C-Download">http://site.icu-project.org/download/48#ICU4C-Download</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar xzvf icu4c-4_8_1-src.tgz
</span><span class='line'><span class="nb">cd </span>icu/source
</span><span class='line'>./runConfigureICU MacOSX
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>Rebuild IMAP, download source from <a href="ftp://ftp.cac.washington.edu/imap/">ftp://ftp.cac.washington.edu/imap/</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>make osx <span class="nv">EXTRACFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch i386 -arch x86_64 -g -Os -pipe -no-cpp-precomp&quot;</span>
</span><span class='line'>sudo cp c-client/*.h /usr/local/include/
</span><span class='line'>sudo cp c-client/*.c /usr/local/lib/
</span><span class='line'>sudo cp c-client/c-client.a /usr/local/lib/libc-client.a
</span></code></pre></td></tr></table></div></figure>


<p>Then in the PHP source folder you downloaded:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/Desktop/php/ext/imap
</span><span class='line'>phpize
</span></code></pre></td></tr></table></div></figure>


<p>Now run configure (I installed with pear):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure  <span class="se">\</span>
</span><span class='line'>--prefix<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--mandir<span class="o">=</span>/usr/share/man  <span class="se">\</span>
</span><span class='line'>--infodir<span class="o">=</span>/usr/share/info  <span class="se">\</span>
</span><span class='line'>--sysconfdir<span class="o">=</span>/private/etc  <span class="se">\</span>
</span><span class='line'>--with-apxs2<span class="o">=</span>/usr/sbin/apxs  <span class="se">\</span>
</span><span class='line'>--enable-cli  <span class="se">\</span>
</span><span class='line'>--with-config-file-path<span class="o">=</span>/etc  <span class="se">\</span>
</span><span class='line'>--with-libxml-dir<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-openssl<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-kerberos<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-zlib<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-bcmath  <span class="se">\</span>
</span><span class='line'>--with-bz2<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-calendar  <span class="se">\</span>
</span><span class='line'>--with-curl<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-dba  <span class="se">\</span>
</span><span class='line'>--enable-exif  <span class="se">\</span>
</span><span class='line'>--enable-ftp  <span class="se">\</span>
</span><span class='line'>--with-gd  <span class="se">\</span>
</span><span class='line'>--enable-gd-native-ttf  <span class="se">\</span>
</span><span class='line'>--with-icu-dir<span class="o">=</span>/usr/local  <span class="se">\</span>
</span><span class='line'>--with-iodbc<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-ldap<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-ldap-sasl<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-libedit<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-mbstring  <span class="se">\</span>
</span><span class='line'>--enable-mbregex  <span class="se">\</span>
</span><span class='line'>--with-mysql<span class="o">=</span>mysqlnd  <span class="se">\</span>
</span><span class='line'>--with-mysqli<span class="o">=</span>mysqlnd  <span class="se">\</span>
</span><span class='line'>--with-pear  <span class="se">\</span>
</span><span class='line'>--with-pdo-mysql<span class="o">=</span>mysqlnd  <span class="se">\</span>
</span><span class='line'>--with-mysql-sock<span class="o">=</span>/var/mysql/mysql.sock  <span class="se">\</span>
</span><span class='line'>--with-readline<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-shmop  <span class="se">\</span>
</span><span class='line'>--with-snmp<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-soap  <span class="se">\</span>
</span><span class='line'>--enable-sockets  <span class="se">\</span>
</span><span class='line'>--enable-sysvmsg  <span class="se">\</span>
</span><span class='line'>--enable-sysvsem  <span class="se">\</span>
</span><span class='line'>--enable-sysvshm  <span class="se">\</span>
</span><span class='line'>--with-tidy  <span class="se">\</span>
</span><span class='line'>--enable-wddx  <span class="se">\</span>
</span><span class='line'>--with-xmlrpc  <span class="se">\</span>
</span><span class='line'>--with-iconv-dir<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-xsl<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--enable-zip  <span class="se">\</span>
</span><span class='line'>--with-imap<span class="o">=</span>/usr/local/imap-2007 <span class="se">\</span>
</span><span class='line'>--with-kerberos <span class="se">\</span>
</span><span class='line'>--with-imap-ssl <span class="se">\</span>
</span><span class='line'>--enable-intl <span class="se">\</span>
</span><span class='line'>--with-pcre-regex  <span class="se">\</span>
</span><span class='line'>--with-pgsql<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-pdo-pgsql<span class="o">=</span>/usr <span class="se">\</span>
</span><span class='line'>--with-freetype-dir<span class="o">=</span>/usr/X11 <span class="se">\</span>
</span><span class='line'>--with-jpeg-dir<span class="o">=</span>/usr  <span class="se">\</span>
</span><span class='line'>--with-png-dir<span class="o">=</span>/usr/X11
</span></code></pre></td></tr></table></div></figure>


<p>If you want to check for errors in the build step you can run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>make <span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure>


<p>This might take a while, like 30 mins.</p>

<p>If you&#8217;re feeling bold, or once the test has completed, run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>Done!</p>

<p>PS If you&#8217;re getting strange errors during <em>configure</em> make sure you have these libraries:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install libpng
</span><span class='line'>brew install freetype
</span><span class='line'>brew install openssl
</span></code></pre></td></tr></table></div></figure>


<h2>Change install path</h2>

<p>The notes above install in the default /usr folder. If you want to install in /opt instead (which is often cleaner), add this to the configure script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>--prefix<span class="o">=</span>/opt/php-5.4.14
</span></code></pre></td></tr></table></div></figure>


<p>Here&#8217;s a cutdown configure script I just used to install 5.4.15</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s1">&#39;./configure&#39;</span>  <span class="s1">&#39;--prefix=/opt/php-5.4.15&#39;</span> <span class="s1">&#39;--with-libxml-dir=/usr&#39;</span> <span class="s1">&#39;--with-openssl=/usr&#39;</span> <span class="s1">&#39;--with-zlib=/usr&#39;</span> <span class="s1">&#39;--enable-bcmath&#39;</span> <span class="s1">&#39;--with-bz2=/usr&#39;</span> <span class="s1">&#39;--enable-calendar&#39;</span> <span class="s1">&#39;--with-curl=/usr&#39;</span> <span class="s1">&#39;--enable-dba&#39;</span> <span class="s1">&#39;--enable-exif&#39;</span> <span class="s1">&#39;--enable-ftp&#39;</span> <span class="s1">&#39;--with-gd&#39;</span> <span class="s1">&#39;--enable-gd-native-ttf&#39;</span> <span class="s1">&#39;--enable-mbstring&#39;</span> <span class="s1">&#39;--enable-mbregex&#39;</span> <span class="s1">&#39;--with-mysql=mysqlnd&#39;</span> <span class="s1">&#39;--with-mysqli=mysqlnd&#39;</span> <span class="s1">&#39;--with-pear&#39;</span> <span class="s1">&#39;--with-pdo-mysql=mysqlnd&#39;</span> <span class="s1">&#39;--with-mysql-sock=/var/mysql/mysql.sock&#39;</span> <span class="s1">&#39;--enable-sockets&#39;</span> <span class="s1">&#39;--enable-sysvmsg&#39;</span> <span class="s1">&#39;--enable-sysvsem&#39;</span> <span class="s1">&#39;--enable-sysvshm&#39;</span> <span class="s1">&#39;--with-tidy&#39;</span> <span class="s1">&#39;--with-xmlrpc&#39;</span> <span class="s1">&#39;--with-iconv-dir=/usr&#39;</span> <span class="s1">&#39;--with-xsl=/usr&#39;</span> <span class="s1">&#39;--enable-zip&#39;</span> <span class="s1">&#39;--enable-intl&#39;</span> <span class="s1">&#39;--with-pcre-regex&#39;</span> <span class="s1">&#39;--with-pgsql=/usr&#39;</span> <span class="s1">&#39;--with-pdo-pgsql=/usr&#39;</span> <span class="s1">&#39;--with-freetype-dir=/usr/X11&#39;</span> <span class="s1">&#39;--with-jpeg-dir=/usr&#39;</span> <span class="s1">&#39;--with-png-dir=/usr/X11&#39;</span> <span class="s1">&#39;--with-apxs2=/usr/sbin/apxs&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Date timezone error when upgrading to PHP 5.3+]]></title>
    <link href="http://chapter31.com/2013/05/06/date-timezone-error-when-upgrading-to-php-5-dot-3-plus/"/>
    <updated>2013-05-06T09:03:00+10:00</updated>
    <id>http://chapter31.com/2013/05/06/date-timezone-error-when-upgrading-to-php-5-dot-3-plus</id>
    <content type="html"><![CDATA[<p>I upgraded to 5.4.14 last night on Mac OSX 10.8.3. Things went smoothly except I got an error running my apps:</p>

<blockquote><p>date(): It is not safe to rely on the system&#8217;s timezone settings. You are <em>required</em> to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone &#8216;UTC&#8217; for now, but please set date.timezone to select your timezone.</p></blockquote>

<p>Basically since PHP 5.3.0 you have to explicitly set your date.timezone setting, this is a good thing. Prior to PHP 5.3.0, the line existed in the php.ini but was generally commented out. There are 2 places you could make this change.</p>

<ol>
<li>php.ini</li>
<li>in your application codebase</li>
</ol>


<p>Ideally you&#8217;d do both. Have a default in your php.ini that all applications on the server can use, and you can override if needed in your application.</p>

<h2>php.ini</h2>

<p>Look in your <em>php.ini</em> for the date.timezone setting and uncomment if necessary. For me I set it to &#8220;Australia/NSW&#8221;. You can get a full list of <a href="http://us3.php.net/manual/en/timezones.php">supported timezones here</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">date.timezone = &quot;Australia/NSW&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Application codebase</h2>

<p>The method above, of course is a server default, so if you want something specific to your application, try:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">date_default_timezone_set(&quot;Australia/NSW&quot;);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stopping a remote process after killing an ssh session]]></title>
    <link href="http://chapter31.com/2013/05/05/stopping-a-remote-process-after-killing-an-ssh-session/"/>
    <updated>2013-05-05T11:19:00+10:00</updated>
    <id>http://chapter31.com/2013/05/05/stopping-a-remote-process-after-killing-an-ssh-session</id>
    <content type="html"><![CDATA[<p>I often want to tail log files on remote server(s) when running diagnostics for an application. You can either login to the remote server via an SSH session, then execute the <em>tail</em> command. Or you can do it from a local shell (without explicitly logging onto the remote server first). That&#8217;s pretty simple:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh myRemoteServer tail -f /path/to/logs/myapp.log
</span></code></pre></td></tr></table></div></figure>


<p>The problem here, is when you ctrl-c out of this command to kill the <em>tail</em>, the process is still running on the remote machine. Some googling told me that this is because of the lack of a controlling terminal for the running process.</p>

<p>From <a href="http://superuser.com/a/20708">superuser.com</a>:</p>

<blockquote><p>This behaviour stems from the lack of a controlling terminal for the running process. When the remote process does not have a controlling terminal, the remote ssh process handling your session is unable to kill the command, which is left hanging in a zombie state to be eventually cleaned up by init.</p></blockquote>

<p>So although the process on the remote server(s) will eventually be cleaned up, it&#8217;s not great to leave a lot of zombie processes lying around. And you certainly don&#8217;t want to logon to every server and <em>ps ax</em> to kill them. Crazy.</p>

<p>The answer, as described on superuser, is that you simply add the <em>-t</em> flag when you connect via SSH from a local terminal. Essentially that makes the remote process terminate when you ctrl+c your tail locally.</p>

<p>So for the initial example at the top:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh -t myRemoteServer tail -f /path/to/logs/myapp.log
</span></code></pre></td></tr></table></div></figure>


<p>I often use <a href="http://www.vanheusden.com/multitail/">multitail</a> a lot because it facilitates tailing log files on a remote servers from one command, a sample multi-tail script is now (with <em>-t</em>):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>multitail -l <span class="s2">&quot;ssh -t myRemote1 tail -f /path/to/logs/myapp.log&quot;</span> <span class="se">\</span>
</span><span class='line'>        -l <span class="s2">&quot;ssh -t myRemote2 tail -f /path/to/logs/myapp.log&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing sonar source on Mac OSX]]></title>
    <link href="http://chapter31.com/2013/05/02/installing-sonar-source-on-mac-osx/"/>
    <updated>2013-05-02T23:23:00+10:00</updated>
    <id>http://chapter31.com/2013/05/02/installing-sonar-source-on-mac-osx</id>
    <content type="html"><![CDATA[<p><a href="http://www.sonarsource.org/">Sonar Source</a> is a an open source, browser based tool to manage code quality. You download and install it, setup some language specific plugins then let it loose on your codebase.</p>

<p>It basically reports on data generated by doing a static analysis of your code on things like:</p>

<ul>
<li>Duplicate code</li>
<li>Comment coverage</li>
<li>Coding rules</li>
<li>Unit tests</li>
<li>Code complexity etc</li>
</ul>


<p>Installing it on a Mac is relatively painless, but there are quite a few steps to follow. Luckily brew comes to the rescue, so simply install it along with sonar-runner:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew update
</span><span class='line'>brew install sonar
</span><span class='line'>brew install sonar-runner</span></code></pre></td></tr></table></div></figure>


<p>The way it works is, Sonar itself is just a reporting tool. It needs data to report on. Sonar-runner is the tool that actually does the static analysis of your codebase and then stores that data in a local datastore. You have several options to use, I chose MySQL.</p>

<p>Make sure MySQL is running and create a new database to hold the data generated by sonar-runner. I called mine <em>sonar_source</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE DATABASE sonar_source;</span></code></pre></td></tr></table></div></figure>


<p>Create a new user (sonar/sonar) and set privileges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE USER 'sonar'@'localhost' IDENTIFIED BY 'sonar';
</span><span class='line'>GRANT ALL PRIVILEGES ON sonar_source.* TO 'sonar'@'localhost';
</span><span class='line'>FLUSH PRIVILEGES;</span></code></pre></td></tr></table></div></figure>


<p>Now you need to set the <em>sonar</em> configuration options, make sure you enter the correct database name (<em>sonar_source</em> in our case). You can comment out most options except credentials and mysql (so comment out the embedded database):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /usr/local/Cellar/sonar/3.5.1/libexec/conf/sonar.properties</span></code></pre></td></tr></table></div></figure>


<p>You also need to specify in the <em>sonar-runner</em> properties file which database to connect to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /usr/local/Cellar/sonar-runner/2.1/libexec/conf/sonar-runner.properties</span></code></pre></td></tr></table></div></figure>


<p>For me I uncommented out the MySQL connection details, and changed the databaes name in the connection string to <em>sonar_source</em></p>

<p>You should now be able to launch sonar, it&#8217;s a web based tool so everything is managed in a browser. Open a terminal and type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sonar start</span></code></pre></td></tr></table></div></figure>


<p>That works because <em>sonar</em> is in your path (via brew). The command will launch sonar so navigate to <a href="http://localhost:9000">http://localhost:9000</a> in your browser of choice. Login (admin/admin) and have a look around. Sonar takes around 20 seconds to fully start, so be patient.</p>

<p>Now you want to install some <em>quality profile</em> plugins for any supported language that you need (javascript, php etc). Navigate to:</p>

<pre><code>Settings -&gt; Configuration -&gt; Update Center
</code></pre>

<p>Click on the <em>Available Plugins</em> tab and install what you need. I installed:</p>

<ul>
<li>JavaScript</li>
<li>PHP</li>
<li>Python</li>
<li>XML</li>
</ul>


<p>You&#8217;ll need to restart sonar for the installation(s) to take effect.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sonar restart</span></code></pre></td></tr></table></div></figure>


<p>Almost there&#8230;</p>

<p>Now in the terminal, go to the root directory of a project you want sonar to inspect, and create a project specific properties file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd myproject
</span><span class='line'>vi sonar-project.properties</span></code></pre></td></tr></table></div></figure>


<p>Here&#8217;s a sample file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># required metadata
</span><span class='line'>sonar.projectKey=com.mydomain:myprojectname
</span><span class='line'>sonar.projectName=My Project Name
</span><span class='line'>sonar.projectVersion=1.0.x
</span><span class='line'>
</span><span class='line'># optional description
</span><span class='line'>sonar.projectDescription=Describe your project here
</span><span class='line'>
</span><span class='line'># path to source directories (required)
</span><span class='line'>sonar.sources=htdocs
</span><span class='line'>
</span><span class='line'># path to test source directories (optional)
</span><span class='line'>#sonar.tests=testDir1,testDir2
</span><span class='line'>
</span><span class='line'># path to project binaries (optional), for example directory of Java bytecode
</span><span class='line'>#sonar.binaries=binDir
</span><span class='line'>
</span><span class='line'># optional comma-separated list of paths to libraries. Only path to JAR file is supported.
</span><span class='line'>#sonar.libraries=path/to/library/*.jar,path/to/specific/library/myLibrary.jar,parent/*/*.jar
</span><span class='line'>
</span><span class='line'># The value of the property must be the key of the language.
</span><span class='line'>sonar.language=js
</span><span class='line'>
</span><span class='line'># Additional parameters
</span><span class='line'>#sonar.my.property=value</span></code></pre></td></tr></table></div></figure>


<p>Note the <em>sonar.language</em> option for JavaScript is <em>js</em>. That&#8217;s kinda hard to find, so if you want to have code coverage for JavaScript make sure you get that right or the runner will just throw errors.</p>

<p>Finally in the root directory of your project you can now execute the sonar-runner by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sonar-runner</span></code></pre></td></tr></table></div></figure>


<p>This is the step that&#8217;s actually examining your code, it only took about 10 seconds for me. Once that&#8217;s finished go back to the sonar webpage (localhost:9000) and you should magically have a project setup to review.</p>

<p>There&#8217;s a tonne of information there. You&#8217;ll find generic things like number of lines of code, percentage of comments in the codebase etc. But you&#8217;ll also potentially get a lot of violations. Think of linting etc, style of coding conventions and the like. The JavaScript quality control plugin in particular is pretty opinionated so your mileage may vary as to the usefulness of sonar.</p>

<p>It&#8217;s a fantastic tool, so keep exploring :)</p>

<h2>Update 6th May 2013</h2>

<h3>Excluding files</h3>

<p>If you want to exclude certain files that are included in your <em>sonar.sources</em> property you can use wildcard matches. Note that although you <em>can</em> do this in the web console, that would be persisted in the local datastore but not in any project version control. I recommend putting this exclusion property in your sonar-project.properties file.</p>

<p>So, if you wanted to include everything in the <em>scripts</em> directory except the <em>vendor</em> folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sonar.sources<span class="o">=</span>www/scripts
</span><span class='line'>sonar.exclusions<span class="o">=</span>www/scripts/vendor/**/*.js
</span></code></pre></td></tr></table></div></figure>


<h3>Out of memory errors</h3>

<p>If <em>sonar-runner</em> is parsing a large codebase you might get an error like the following:</p>

<blockquote><p>Caused by: java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space</p></blockquote>

<p>Note: you can get more verbose output from the runner by adding the <em>e</em> flag:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sonar-runner -e
</span></code></pre></td></tr></table></div></figure>


<p>You can increase the Java heap size by running the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">SONAR_RUNNER_OPTS</span><span class="o">=</span><span class="s2">&quot;-Xmx512m -XX:MaxPermSize=512m&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding a global ignore file for git]]></title>
    <link href="http://chapter31.com/2013/01/21/adding-a-global-ignore-file-for-git/"/>
    <updated>2013-01-21T23:02:46+11:00</updated>
    <id>http://chapter31.com/2013/01/21/adding-a-global-ignore-file-for-git</id>
    <content type="html"><![CDATA[<p>Quick setup of ignore files for Git. You can of course set these up per repo, but that gets a little old. Instead you can setup a single ignore file and link to it so that every repo refers to it.</p>

<p>For example, create a git ignore file in your home directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/.gitignore_global</span></code></pre></td></tr></table></div></figure>


<p>Fill it with regular files that you want to ignore:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#.gitignore</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Railo files #</span>
</span><span class='line'><span class="c">######################</span>
</span><span class='line'>WEB-INF/
</span><span class='line'>
</span><span class='line'><span class="c"># Sublime files #</span>
</span><span class='line'><span class="c">######################</span>
</span><span class='line'>*.sublime-project
</span><span class='line'>*.sublime-workspace
</span><span class='line'>
</span><span class='line'><span class="c"># Misc files #</span>
</span><span class='line'><span class="c">######################</span>
</span><span class='line'>*.yml
</span><span class='line'>*.buildpath
</span><span class='line'>*.settings
</span><span class='line'>*.cache
</span><span class='line'>
</span><span class='line'><span class="c"># OS generated files #</span>
</span><span class='line'><span class="c">######################</span>
</span><span class='line'>.DS_Store
</span><span class='line'>ehthumbs.db
</span><span class='line'>Icon?
</span><span class='line'>Thumbs.db
</span><span class='line'>.project
</span></code></pre></td></tr></table></div></figure>


<p>Edit your main git config file (~/.gitconfig) and add a reference to this new global ignore file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>user<span class="o">]</span>
</span><span class='line'>        <span class="nv">name</span> <span class="o">=</span> xxxx xxxx
</span><span class='line'>        <span class="nv">email</span> <span class="o">=</span> joe@xxx.com
</span><span class='line'>
</span><span class='line'><span class="o">[</span>core<span class="o">]</span>
</span><span class='line'>        <span class="nv">excludesfile</span> <span class="o">=</span> /Users/computername/.gitignore_global
</span></code></pre></td></tr></table></div></figure>


<p>Or you can run the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global core.excludesfile ~/.gitignore_global
</span></code></pre></td></tr></table></div></figure>


<p>Now all your git projects will share the same ignore file :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Showing hidden files in Finder on mac osx]]></title>
    <link href="http://chapter31.com/2013/01/21/showing-hidden-files-in-finder-on-mac-osx/"/>
    <updated>2013-01-21T22:37:37+11:00</updated>
    <id>http://chapter31.com/2013/01/21/showing-hidden-files-in-finder-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Short and sweet, MAC OSX has this annoying trait where hidden files (dotfiles) are not visible by default in Finder. No probs, I&#8217;ll just go to the &#8220;View&#8221; menu and turn them on. Nope&#8230;nada, zip.</p>

<p>Turns out you have to enter a command in the terminal, nice. Here it is for future reference:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>defaults write com.apple.finder AppleShowAllFiles TRUE</span></code></pre></td></tr></table></div></figure>


<p>Then kill Finder to have the changes take effect.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>killall Finder</span></code></pre></td></tr></table></div></figure>


<p>If you ever want to turn hidden files off?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>defaults write com.apple.finder AppleShowAllFiles FALSE</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Downloading youtube videos]]></title>
    <link href="http://chapter31.com/2013/01/01/downloading-youtube-videos/"/>
    <updated>2013-01-01T13:48:27+11:00</updated>
    <id>http://chapter31.com/2013/01/01/downloading-youtube-videos</id>
    <content type="html"><![CDATA[<p>I wanted to grab some youtube videos for the kids and found this cool <a href="http://rg3.github.com/youtube-dl/">CLI utility called youtube-dl</a> to handle it. I downloaded it from the website (you may need to chmod 755):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget https://github.com/downloads/rg3/youtube-dl/youtube-dl -O /usr/local/bin/youtube-dl</span></code></pre></td></tr></table></div></figure>


<p>However you can get it via brew if you want:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install youtube-dl</span></code></pre></td></tr></table></div></figure>


<p>The basic process is the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>youtube-dl [video URL]</span></code></pre></td></tr></table></div></figure>


<p>By default that should download the highest quality format available (in case you didn&#8217;t know, youtube usually has multiple versions of a file for different qualities etc). If you want to see what formats are available, try:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>youtube-dl -F [URL]</span></code></pre></td></tr></table></div></figure>


<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>youtube-dl -F http://www.youtube.com/watch?v<span class="o">=</span>iThX9rbOqXY
</span><span class='line'><span class="o">[</span>youtube<span class="o">]</span> Setting language
</span><span class='line'><span class="o">[</span>youtube<span class="o">]</span> iThX9rbOqXY: Downloading video webpage
</span><span class='line'><span class="o">[</span>youtube<span class="o">]</span> iThX9rbOqXY: Downloading video info webpage
</span><span class='line'><span class="o">[</span>youtube<span class="o">]</span> iThX9rbOqXY: Extracting video information
</span><span class='line'>Available formats:
</span><span class='line'>34 : flv <span class="o">[</span>360x640<span class="o">]</span>
</span><span class='line'>18 : mp4 <span class="o">[</span>360x640<span class="o">]</span>
</span><span class='line'>43 : webm <span class="o">[</span>360x640<span class="o">]</span>
</span><span class='line'>5 : flv <span class="o">[</span>240x400<span class="o">]</span>
</span><span class='line'>17 : mp4 <span class="o">[</span>144x176<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you can select whichever you want to download by choosing the number next to the format you want:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>youtube-dl -f <span class="o">[</span>format number<span class="o">]</span> <span class="o">[</span>URL<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>So if I wanted the highest quality mp4 available in the example above I&#8217;d  type (note the number corresponds to the video I want) the following, note the lowercase f:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>youtube-dl -f 18 http://www.youtube.com/watch?v<span class="o">=</span>iThX9rbOqXY
</span></code></pre></td></tr></table></div></figure>


<p>You can also pass in a file containing a list of URLs (one on ea to handle batch downloading:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>youtube-dl -a urls.txt
</span></code></pre></td></tr></table></div></figure>


<p>If you want to rename the file as you download it (by default it&#8217;s the filename on youtube which isn&#8217;t really that useful):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>youtube-dl -f 18 -o <span class="s2">&quot;myfilename.mp4&quot;</span> <span class="o">[</span>URL<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can do other cool things like extracting the audio only (and choosing which audio format you want). There are also <a href="http://rg3.github.com/youtube-dl/documentation.html#d4">LOTS of sites</a> that are supported&#8230;not just youtube.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON undefined issues on IE8 and IE9]]></title>
    <link href="http://chapter31.com/2012/11/21/json-undefined-issues-on-ie8-and-ie9/"/>
    <updated>2012-11-21T16:48:57+11:00</updated>
    <id>http://chapter31.com/2012/11/21/json-undefined-issues-on-ie8-and-ie9</id>
    <content type="html"><![CDATA[<p>I had some issues today while testing in IE, where &#8220;JSON&#8221; was undefined. This was happening in IE8 and IE9, which is strange because the JSON functions are in those IE versions. The problem was IE&#8217;s compatibility view, which triggers rendering in sort-of-IE7 mode. Classy. This was making JSON undefined ;(</p>

<p>The usual fix for this is to add a meta tag to force IE to use &#8220;edge&#8221; (or a specific version if you like):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;X-UA-Compatible&quot;</span> <span class="na">content=</span><span class="s">&quot;IE=edge&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>However we&#8217;ve had problems with this in the past where it doesn&#8217;t always seem to work, especially on corporate networks and intranets. We now use an Apache header (and not use the meta tag at all) to achieve IE=edge. Here&#8217;s the Apache header (to go in your .htaccess, note that you need mod_headers enabled for this to work):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Header set X-UA-Compatible &quot;IE=edge&quot;
</span></code></pre></td></tr></table></div></figure>


<h3>Update</h3>

<p>You can use the Apache header above, combined with a check to only send the header for Internet Explorer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>BrowserMatch MSIE ie
</span><span class='line'>Header set X-UA-Compatible &quot;IE=edge,chrome=1&quot; env=ie
</span></code></pre></td></tr></table></div></figure>


<p>To be safe, if you can&#8217;t use the Apache header above (which we found to always work as opposed to the meta tag) you might want to load <a href="https://github.com/douglascrockford/JSON-js/blob/master/json2.js">json2.js</a> for IE8 and 9 because you can&#8217;t control if a user is in compatibility view. If they are, then JSON will be undefined. The cool thing about json2 is that if it detects that JSON is already defined, it won&#8217;t do anything at all. But it&#8217;s there if the older browsers need it (IE7) or you somehow have visitors in compatibility view.</p>

<p>You can also load json2.js from a CDN:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>http://cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js
</span><span class='line'>or minified
</span><span class='line'>http://cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.min.js
</span><span class='line'>
</span><span class='line'>or
</span><span class='line'>
</span><span class='line'>http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js
</span><span class='line'>or minified
</span><span class='line'>http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.min.js
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generating a powerset in ColdFusion]]></title>
    <link href="http://chapter31.com/2012/10/04/generating-a-powerset-in-coldfusion/"/>
    <updated>2012-10-04T21:20:46+10:00</updated>
    <id>http://chapter31.com/2012/10/04/generating-a-powerset-in-coldfusion</id>
    <content type="html"><![CDATA[<p>I recently needed to generate a <a href="http://en.wikipedia.org/wiki/Power_set">powerset</a> (a set of all subsets) of 3 HTML select boxes. The idea was that a user could choose 1-many options from each box, and they had to choose a value from all 3 boxes (none could be empty).</p>

<p>Select #1 had 4 values<br/>
Select #2 had 7 values<br/>
Select #3 had 13 values</p>

<p>Now, I needed to generate every possible permutation for these 3 select boxes based on the rules I defined above. That meant the possible number of combinations for each box was:</p>

<p>Select #1 had 16<em> possible combinations<br/>
Select #2 had 128</em> possible combinations<br/>
Select #3 had 8192* possible combinations</p>

<p>* It was actually 1 less than that, because a powerset take into consideration an empty selection, so in reality the numbers would have been 15, 127 and 8191.</p>

<p>This was calculated using 2n, where <em>n</em> is an number (integer) of options in a set, so 24, 27 and 213</p>

<p>Now, how did I go about calculating these powersets? I cheated :smile:</p>

<p>I grabbed a JavaScript function from <a href="http://rosettacode.org/wiki/Power_set#JavaScript">Rosetta Code</a> and ported it to ColdFusion.</p>

<p>Here is the function to generate a powerset from a set (array) of data:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">public</span> <span class="nx">array</span> <span class="kd">function</span> <span class="nx">calculate</span><span class="p">(</span><span class="nx">required</span> <span class="nx">array</span> <span class="nx">data</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ps</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">lenData</span> <span class="o">=</span> <span class="nx">arrayLen</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">lenPS</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="nx">LTE</span> <span class="nx">lenData</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">lenPS</span> <span class="o">=</span> <span class="nx">arrayLen</span><span class="p">(</span><span class="nx">ps</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">j</span> <span class="nx">LTE</span> <span class="nx">lenPS</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nx">arrayAppend</span><span class="p">(</span><span class="nx">ps</span><span class="p">,</span> <span class="nx">listAppend</span><span class="p">(</span><span class="nx">ps</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span> <span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">ps</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>A sample powerset of 4 values (in this case 1,2,3,4) would be:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">Powerset</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Powerset</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">res</span> <span class="o">=</span> <span class="nx">Powerset</span><span class="p">.</span><span class="nx">calculate</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Outputs</span><span class="o">:</span>
</span><span class='line'><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;2&quot;</span><span class="p">,</span><span class="s2">&quot;1,2&quot;</span><span class="p">,</span><span class="s2">&quot;3&quot;</span><span class="p">,</span><span class="s2">&quot;1,3&quot;</span><span class="p">,</span><span class="s2">&quot;2,3&quot;</span><span class="p">,</span><span class="s2">&quot;1,2,3&quot;</span><span class="p">,</span><span class="s2">&quot;4&quot;</span><span class="p">,</span><span class="s2">&quot;1,4&quot;</span><span class="p">,</span><span class="s2">&quot;2,4&quot;</span><span class="p">,</span><span class="s2">&quot;1,2,4&quot;</span><span class="p">,</span><span class="s2">&quot;3,4&quot;</span><span class="p">,</span><span class="s2">&quot;1,3,4&quot;</span><span class="p">,</span><span class="s2">&quot;2,3,4&quot;</span><span class="p">,</span><span class="s2">&quot;1,2,3,4&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>By the way, my total combination across all 3 sets was a mere 16,777,216.</p>

<p><a href="https://github.com/michaelsharman/Powerset">Grab from github</a> if you prefer the CFC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modifying FW/1 variables.framework properties]]></title>
    <link href="http://chapter31.com/2012/09/30/modifying-fw1-variables-framework-properties/"/>
    <updated>2012-09-30T16:54:59+10:00</updated>
    <id>http://chapter31.com/2012/09/30/modifying-fw1-variables-framework-properties</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/seancorfield/fw1/">FW/1</a> gives you a nice, clean way to manage framework configuration properties. They&#8217;re all wrapped up inside Application.cfc in a structure called <em>variables.framework</em>, <a href="https://github.com/seancorfield/fw1/wiki/Developing-Applications-Manual">you can read more about them here</a> under <em>Configuring FW/1 Applications</em>.</p>

<p><a href="http://www.learnosity.com">Our applications</a> often have a need to use different values for these properties, depending on which environment the application is running in (development, testing, staging, production etc). An example of this might be <em>reloadApplicationOnEveryRequest</em>, which we want as <em>true</em> in development, but <em>false</em> elsewhere else.</p>

<p>So our defaults (at the top of Application.cfc) might be to set the reload property as false:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">variables</span><span class="p">.</span><span class="nx">framework</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">reloadApplicationOnEveryRequest</span> <span class="o">=</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">disableReloadApplication</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>These are good values for production, but we want to override them if we&#8217;re in development. Here&#8217;s how:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* @hint We need to override variables.framework values, only way to do this is pre-fw/1 onRequestStart() as setupRequest() is called later in the call stack</span>
</span><span class='line'><span class="cm">**/</span>
</span><span class='line'><span class="kr">public</span> <span class="nx">any</span> <span class="kd">function</span> <span class="nx">onRequestStart</span><span class="p">(</span><span class="nx">string</span> <span class="nx">targetPath</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">isDefined</span><span class="p">(</span><span class="s2">&quot;application.config.mode&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">application</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">mode</span> <span class="o">==</span> <span class="s2">&quot;dev&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nx">variables</span><span class="p">.</span><span class="nx">framework</span><span class="p">.</span><span class="nx">reloadApplicationOnEveryRequest</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">variables</span><span class="p">.</span><span class="nx">framework</span><span class="p">.</span><span class="nx">disableReloadApplication</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="kr">super</span><span class="p">.</span><span class="nx">onRequestStart</span><span class="p">(</span><span class="nx">targetPath</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see in the example above that we override the default values we set initially, so that if we&#8217;re in <em>development</em> mode we not only <a href="http://www.chapter31.com/2012/09/27/preventing-fw1-from-reinitialising-an-app-via-the-url/">have the ability to reload the application (using a custom property called <em>disableReloadApplication</em>)</a>, but we also reload the application on every request.</p>

<p>2 things to note here, are that we can&#8217;t use setupRequest() for this, as it&#8217;s called too late by framework.cfc and won&#8217;t enable us to override any <em>variables.framework</em> properties. So instead we use onRequestStart(), which gives us the 2nd thing to watch out for, and that is that you must be careful to call super.onRequestStart(targetPath); at the conclusion of this method. Or you might get strange results.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preventing FW/1 from reinitialising an app via the URL]]></title>
    <link href="http://chapter31.com/2012/09/27/preventing-fw1-from-reinitialising-an-app-via-the-url/"/>
    <updated>2012-09-27T22:57:23+10:00</updated>
    <id>http://chapter31.com/2012/09/27/preventing-fw1-from-reinitialising-an-app-via-the-url</id>
    <content type="html"><![CDATA[<p>One of the things that <a href="https://github.com/seancorfield/fw1">FW/1</a> allows you to do is configure a reload &#8220;key&#8221; and &#8220;password&#8221; which you can use to reinit your application via URL.</p>

<p>So inside your Application.cfc you might have:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>variables.framework = {
</span><span class='line'>  reload = 'reinit',
</span><span class='line'>  password = "mysecretkey"
</span><span class='line'>  …
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>So you can reinit your application (flush the application scope by re-running onApplicationStart()) by calling something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.example.com/?reinit=mysecretkey</span></code></pre></td></tr></table></div></figure>


<p>The &#8220;reload&#8221; and &#8220;password&#8221; properties can be changed to whatever you want for securities sake.</p>

<p>We wanted a little extra security, that being the option to never allow an application to be reinitialised via a URL. Typically we want this in a production environment only. What you lose in flexibility, being able to reinit the application quickly and easily after a release/deployment, you (arguably) gain in security. Perhaps this is being a little over-cautious, but we like to be better safe than sorry, especially when reducing possible DOS vectors. Also it makes life easier when dealing with system administrators and/or security audits :)</p>

<p>To achieve this we simply added a new property to the <em>variables.framework</em> structure inside Application.cfc, called &#8220;disableReloadApplication&#8221;, which accepts true|false. If <em>true</em>, then even if you know the &#8220;reload&#8221; and &#8220;password&#8221; values…the application cannot be reinitialised via the URL. So the following would NOT reinit the app:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.example.com/?reinit=mysecretkey</span></code></pre></td></tr></table></div></figure>


<p>A few extra lines were needed inside framework.cfc to make this happen:</p>

<p>setupFrameworkDefaults()</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>…
</span><span class='line'>if ( !structKeyExists(variables.framework, 'disableReloadApplication') ) {
</span><span class='line'>  variables.framework.disableReloadApplication = false;
</span><span class='line'>}
</span><span class='line'>…</span></code></pre></td></tr></table></div></figure>


<p>and isFrameworkReloadRequest()</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>return ( !variables.framework.disableReloadApplication &&
</span><span class='line'>  ((isDefined( 'URL' ) &&
</span><span class='line'>  structKeyExists( URL, variables.framework.reload ) &&
</span><span class='line'>  URL[ variables.framework.reload ] == variables.framework.password ) ||
</span><span class='line'>  variables.framework.reloadApplicationOnEveryRequest));</span></code></pre></td></tr></table></div></figure>


<p>Although we could have extended framework.cfc with our own file (and just defined these 2 methods), we just altered the original framework.cfc as we store a local copy in source control that all our projects can draw from.</p>

<p><a href="https://github.com/michaelsharman/fw1">Here is the fork of FW/1</a> (really just a change to framework.cfc), version 2.0.1.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding a mail server to a Railo instance]]></title>
    <link href="http://chapter31.com/2012/09/26/adding-a-mail-server-to-a-railo-instance/"/>
    <updated>2012-09-26T22:04:00+10:00</updated>
    <id>http://chapter31.com/2012/09/26/adding-a-mail-server-to-a-railo-instance</id>
    <content type="html"><![CDATA[<p>We turn off all GUI based administration consoles in our production environments, this includes Railo&#8217;s admin area.</p>

<p>If you need to configure your Railo instance to include an SMTP server, you can add a line in WEB-INF/railo/railo-web.xml.cfm</p>

<p>Open up that file (probably as sudo), look for the <mail> tag (which is empty by default) and insert the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;server port="25" smtp="127.0.0.1" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>The &#8220;smtp&#8221; attribute should be the IP address of your SMTP server. Also, if your SMTP server requires a username and password, you can add them like so:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;server port="25" smtp="127.0.0.1" username="myusername" password="mypassword" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>At the end of the day your config entry should look something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;mail log="{railo-web}/logs/mail.log"&gt;
</span><span class='line'>  &lt;server port="25" smtp="127.0.0.1"/&gt;
</span><span class='line'>&lt;/mail&gt;</span></code></pre></td></tr></table></div></figure>


<h2>Update - January 2013</h2>

<p>I was googling something else when I came across a post on the Railo groups indicating that by default only <em>error</em> logging is enabled for mail. This means that in the event of an error (where Railo is unable to send the mail) you can check the WEB-INF/railo/logs/mail.log for information.</p>

<p>However, you can turn on <em>info</em> logging as well to presumably track whenever mail is actually sent. This can be done in either railo-server.xml or railo-web.xml. Eg:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;mail log-level="info" log="{railo-web}/logs/mail.log"&gt;
</span><span class='line'>  &lt;server port="25" smtp="127.0.0.1"/&gt;
</span><span class='line'>&lt;/mail&gt;</span></code></pre></td></tr></table></div></figure>


<p>This is really handy for us as we disallow access to the Railo admin GUI.</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql | chapter31 &raquo;]]></title>
  <link href="http://chapter31.com/categories/mysql/atom.xml" rel="self"/>
  <link href="http://chapter31.com/"/>
  <updated>2015-05-26T09:16:35+10:00</updated>
  <id>http://chapter31.com/</id>
  <author>
    <name><![CDATA[Michael Sharman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Problem dumping MySQL database - Unknown system variable 'GTID_MODE']]></title>
    <link href="http://chapter31.com/2013/06/19/problem-dumping-mysql-database-unknown-system-variable-gtid-mode/"/>
    <updated>2013-06-19T12:01:00+10:00</updated>
    <id>http://chapter31.com/2013/06/19/problem-dumping-mysql-database-unknown-system-variable-gtid-mode</id>
    <content type="html"><![CDATA[<p>I was trying to dump and restore a MySQL database today, but received the following error when I tried to dump:</p>

<p><code>bash
mysqldump: Couldn't execute 'SELECT @@GTID_MODE': Unknown system variable 'GTID_MODE' (1193)
</code></p>

<p>The MySQL version of the database I was trying to dump was 5.5.28 and the server I was trying to restore into was 5.6.10.</p>

<p>A quick google told me that the error was likely due to this mismatch in versions. From the <a href="http://blog.teamextension.com/mysqldump-couldnt-execute-select-gtid_mode-unknown-system-variable-gtid_mode-1193-1246">teamextension blog</a>:</p>

<pre><code>This error is in part due to the introduction of Global Transaction Identifiers (GTIDs) in MySQL 5.6.
GTIDs make it simple to track and compare replication across a master-slave topology.
</code></pre>

<p>The solution is adding the following option to your dump statement:</p>

<p><code>bash
--set-gtid-purged=OFF
</code></p>

<p>In all, my statement was:</p>

<p><code>bash
mysqldump -h[host] -u[user] --single-transaction --routines --triggers --set-gtid-purged=OFF --compatible=ansi [database] | mysql --h[host] -u[user]
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL thread_stack overrun error]]></title>
    <link href="http://chapter31.com/2013/05/22/mysql-thread-stack-overrun-error/"/>
    <updated>2013-05-22T16:28:00+10:00</updated>
    <id>http://chapter31.com/2013/05/22/mysql-thread-stack-overrun-error</id>
    <content type="html"><![CDATA[<p>We added a trigger to MySQL (v5.5.28) recently that was a simple UPDATE on table column, when a target table was UPDATEd. It ran fine (as expected) on our development environment but not when we pushed the changes to staging.</p>

<p>The error being thrown by MySQL was:</p>

<p><code>bash
Thread stack overrun:  8304 bytes used of a 131072 byte stack, and 128000 bytes needed.  Use 'mysqld --thread_stack=#' to specify a bigger stack.
</code></p>

<p>Querying the database told me that the current <em>thread_stack</em> setting is 128K:</p>

<p><code>bash
mysql&gt; show variables where `Variable_name` = 'thread_stack';
+---------------+--------+
| Variable_name | Value  |
+---------------+--------+
| thread_stack  | 131072 |
+---------------+--------+
1 row in set (0.00 sec)
</code></p>

<p>This was confirmed by looking at the <em>thread_stack</em> variable in /etc/mysql/my.cnf</p>

<p><code>bash
thread_stack = 128K
</code></p>

<p>The <a href="http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_thread_stack">docs for MySQL 5.5</a> suggest that it should be 192K for 32-bit systems and 256K for 64-bit systems. We're running a 64-bit platform, you can tell by running:</p>

<p><code>bash
[me@mydbserver ~]$ uname -m
x86_64
</code></p>

<p>If the response is <em>i686</em>, you have a 32-bit version of Linux and if the response is <em>x86_64</em> then you have a 64-bit version of Linux.</p>

<p>The fix is a simple case of increasing the value to 256K (if you're on 64-bit) or 192K if you're on 32-bit, as per the documentation. Don't forget that the thread_stack is an allocation of memory per connection, so don't set it too high or you might run into memory issues on your database server.</p>

<p>In case it wasn't clear, you can make this change in your <em>my.cnf</em> file.</p>
]]></content>
  </entry>
  
</feed>
